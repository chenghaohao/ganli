<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ganli.dao.EventDao">
    <resultMap id="userMap" type="com.ganli.entity.User">
        <id column="user_uid" property="userUid" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_sex" property="userSex" jdbcType="INTEGER"/>
        <result column="user_phone" property="userPhone" jdbcType="VARCHAR"/>
        <result column="user_location" property="userLocation" jdbcType="VARCHAR"/>
        <result column="user_pwd" property="userPwd" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="eventMap" type="com.ganli.entity.Event">
        <id column="event_uid" property="eventUid" jdbcType="VARCHAR"/>
        <result column="event_name" property="eventName" jdbcType="VARCHAR"/>
        <result column="event_type" property="eventType" jdbcType="INTEGER"/>
        <result column="event_location" property="eventLocation" jdbcType="VARCHAR"/>
        <result column="event_time" property="eventTime" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="user_uid" property="userUid" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="giftMap" type="com.ganli.entity.GiftList">
        <id column="gift_uid" property="giftUid" jdbcType="VARCHAR"/>
        <result column="gift_person" property="giftPerson" jdbcType="VARCHAR"/>
        <result column="gift_money" property="giftMoney" jdbcType="INTEGER"/>
        <result column="gift_remark" property="giftRemark" jdbcType="VARCHAR"/>
        <result column="event_uid" property="eventUid" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="user_uid" property="userUid" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="repayMap" type="com.ganli.entity.RepayList">
        <id column="repay_uid" property="repayUid" jdbcType="VARCHAR"/>
        <result column="repay_person" property="repayPerson" jdbcType="VARCHAR"/>
        <result column="repay_money" property="repayMoney" jdbcType="INTEGER"/>
        <result column="repay_remark" property="repayRemark" jdbcType="VARCHAR"/>
        <result column="gift_uid" property="giftUid" jdbcType="VARCHAR"/>
        <result column="event_uid" property="eventUid" jdbcType="VARCHAR"/>
        <result column="user_uid" property="userUid" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="merchantMap" type="com.ganli.entity.Merchant">
        <id column="merchant_uid" property="merchantUid" jdbcType="VARCHAR"/>
        <result column="merchant_name" property="merchantName" jdbcType="VARCHAR"/>
        <result column="merchant_img" property="merchantImg" jdbcType="VARCHAR"/>
        <result column="merchant_desc" property="merchantDesc" jdbcType="INTEGER"/>
        <result column="merchant_phone" property="merchantPhone" jdbcType="VARCHAR"/>
        <result column="merchant_location" property="merchantLocation" jdbcType="VARCHAR"/>
        <result column="merchant_score" property="merchantScore" jdbcType="VARCHAR"/>
        <result column="merchant_type" property="merchantType" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="imgMap" type="Map">
        <id property="imgId" column="img_id" />
        <result property="md5" column="md5" />
    </resultMap>
    <resultMap id="feedBackMap" type="com.ganli.entity.FeedBack">
        <id column="feedback_uid" property="feedBckUid" jdbcType="VARCHAR"/>
        <result column="feedback_desc" property="feedBackDesc" jdbcType="VARCHAR"/>
        <result column="user_uid" property="userUid" jdbcType="VARCHAR"/>
        <result column="c_time" property="cTime" jdbcType="DATE"/>
    </resultMap>
     <!--批量插入事件-->
    <insert id="saveEvent" parameterType="java.util.List" useGeneratedKeys="true">
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO event(event_uid,event_name,event_type,event_location,event_time,user_uid,status)
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.eventUid},#{item.eventName},#{item.eventType},#{item.eventLocation},#{item.eventTime},#{item.userUid},0)
        </foreach>
    </insert>
    <update id="updateEvent" parameterType="int" >
        UPDATE event SET event_status=#{status} WHERE user_uid=#{uid}
    </update>
    <!--批量插入收礼单-->
    <insert id="saveGift" parameterType="java.util.List" useGeneratedKeys="true">
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO gift_list(gift_uid,gift_person,gift_money,gift_remark,event_uid,user_uid,status)
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.giftUid},#{item.giftPerson},#{item.giftMoney},#{item.giftRemark},#{item.eventUid},#{item.userUid},0)
        </foreach>
    </insert>
    <!--批量插入还礼单-->
    <insert id="saveRepay" parameterType="java.util.List" useGeneratedKeys="true">
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO repay_list(repay_uid,repay_person,repay_money,repay_remark,gift_uid,event_uid,user_uid,status)
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.repayUid},#{item.repayPerson},#{item.repayMoney},#{item.repayRemark},#{item.giftUid},#{item.eventUid},#{item.userUid},0)
        </foreach>
    </insert>
    <!--删除事件-->
    <delete id="deleteEvent" parameterType="string">
      DELETE FROM event where user_uid=#{uid}
    </delete>
    <!--删除收礼单-->
    <delete id="deleteGift" parameterType="string">
        DELETE FROM gift_list WHERE user_uid=#{uid}
    </delete>
    <!--删除还礼单-->
    <delete id="deleteRepay" parameterType="string">
        DELETE FROM repay_list WHERE user_uid=#{uid}
    </delete>
    
    <select id="findEventList" parameterType="string" resultMap="eventMap">
        SELECT * FROM event where user_uid=#{uid}
    </select>
    <select id="findGiftList" parameterType="string" resultMap="giftMap">
        SELECT * FROM gift_list where user_uid=#{uid}
    </select>
    <select id="findRepayList" parameterType="string" resultMap="repayMap">
        SELECT * FROM repay_list WHERE user_uid=#{uid}
    </select>
    
    <insert id="saveFeedBack" parameterType="com.ganli.entity.FeedBack">
        INSERT INTO feedback VALUES (#{feedBckUid},#{feedBackDesc},#{userUid},now())
    </insert>

    <insert id="saveMerchant" parameterType="com.ganli.entity.Merchant" useGeneratedKeys="true">
        INSERT INTO merchant_list(merchant_uid,merchant_name,merchant_img,merchant_desc,merchant_phone,merchant_location,merchant_score,merchant_type)
        VALUES
        (#{merchantUid},#{merchantName},#{merchantImg},#{merchantDesc},#{merchantPhone},#{merchantLocation},#{merchantScore},#{merchantType})
        ON DUPLICATE KEY UPDATE
        merchant_name=#{merchantName},
        merchant_img=#{merchantImg},
        merchant_desc=#{merchantDesc},
        merchant_phone=#{merchantPhone},
        merchant_location=#{merchantLocation},
        merchant_score=#{merchantScore},
        merchant_type=#{merchantType}
    </insert>
    <select id="findMerchantList" resultMap="merchantMap" >
        SELECT m.* FROM merchant_list m
        <where>
            <if test="merchantUid != '' and merchantUid != null">
                and m.merchant_uid=#{merchantUid}
            </if>
            <if test="merchantLocation != '' and merchantLocation != null">
               and m.merchant_location=#{merchantLocation}
            </if>
            <if test="merchantType != '' and merchantType != null">
                and m.merchant_type=#{merchantType}
            </if>
            <if test="merchantName != '' and merchantName != null">
                and m.merchant_name like CONCAT(CONCAT(#{merchantName}), '%')
            </if>
        </where>

    </select>
    <select id="findImgs" resultType="Map" parameterType="List">
        SELECT * FROM imgs WHERE merchant_uid IN
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="findFeedBckList" resultType="map" >
        SELECT f.*,u.user_name,u.user_phone FROM feedback f,user u WHERE f.user_uid=u.user_uid order BY f.c_time DESC
    </select>

    <select id="findUserList" resultType="map" >
        SELECT u.* FROM user u
    </select>
    
    <insert id="insertRecordInstall" parameterType="string">
        INSERT INTO record_install(phone_id,record_time) VALUES (#{phoneId},now())
    </insert>
    <insert id="insertRecordEvent" parameterType="hashMap">
        INSERT INTO record_event(phone_id,`type`,record_time) VALUES (#{phoneId},#{type},now())
    </insert>
    <insert id="insertRecordMerchant" parameterType="string">
        INSERT INTO record_merchant(phone_id,record_time) VALUES (#{phoneId},now())
    </insert>
    <select id="countRecordInstall" resultType="int" parameterType="hashMap">
        SELECT count(DISTINCT(phone_id)) FROM record_install
         <where>
             <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
                 record_time BETWEEN DATE_FORMAT( #{startTime,jdbcType=DATE}, '%Y-%m-%d') AND  DATE_FORMAT( #{endTime,jdbcType=DATE}, '%Y-%m-%d')
             </if>
             <if test="phoneId != null and phoneId != ''">
                 and phone_id=#{phoneId}
             </if>
         </where>
    </select>
    <select id="countRecordEvent" resultType="int" parameterType="hashMap">
        SELECT count(id) FROM record_event
         <where>
             <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
                 record_time BETWEEN DATE_FORMAT( #{startTime,jdbcType=DATE}, '%Y-%m-%d') AND  DATE_FORMAT( #{endTime,jdbcType=DATE}, '%Y-%m-%d')
             </if>
             <if test="type != null and type != ''">
                 AND `type` = #{type}
             </if>
         </where>
    </select>
    <select id="countRecordMerchant" resultType="int" parameterType="hashMap">
        SELECT count(id) FROM record_merchant
        <where>
            <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
                record_time BETWEEN DATE_FORMAT( #{startTime,jdbcType=DATE}, '%Y-%m-%d') AND  DATE_FORMAT( #{endTime,jdbcType=DATE}, '%Y-%m-%d')
            </if>
            <if test="phoneId != null and phoneId != ''">
                and phone_id=#{phoneId}
            </if>
        </where>
    </select>

    <update id="batchUpdateEvent"  parameterType="java.util.List">

        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update event
            <set>
                event_name=#{item.eventName},
                event_type=#{item.eventType},
                event_location=#{item.eventLocation},
                event_time=#{item.eventTime},
                status=0
            </set>
            where event_uid = #{item.eventUid}
        </foreach>

    </update>
    <update id="batchUpdateGift"  parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update gift_list
            <set>
                gift_person=#{item.giftPerson},
                gift_money=#{item.giftMoney},
                gift_remark=#{item.giftRemark},
                event_uid=#{item.eventUid},
                user_uid=#{item.userUid},
                status=0
            </set>
            where gift_uid = #{item.giftUid}
        </foreach>
    </update>
    <update id="batchUpdateRepay"  parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update repay_list
            <set>
                repay_person=#{item.repayPerson},
                repay_money=#{item.repayMoney},
                repay_remark=#{item.repayRemark},
                gift_uid=#{item.giftUid},
                event_uid=#{item.eventUid},
                user_uid=#{item.userUid},
                status=0
            </set>
            where repay_uid = #{item.repayUid}
        </foreach>
    </update>

    <delete id="batchDeleteEvent" parameterType="java.util.List">
        <![CDATA[
       delete from event where event_uid in
    ]]>
        <foreach collection="list" item = "item" open="(" separator="," close=")">
            #{item.eventUid}
        </foreach>
    </delete>
    <delete id="batchDeleteGift" parameterType="java.util.List">
        <![CDATA[
       delete from gift_list where gift_uid in
    ]]>
        <foreach collection="list" item = "item" open="(" separator="," close=")">
            #{item.giftUid}
        </foreach>
    </delete>
    <delete id="batchDeleteRepay" parameterType="java.util.List">
        <![CDATA[
       delete from repay_list where repay_uid in
    ]]>
        <foreach collection="list" item = "item" open="(" separator="," close=")">
            #{item.repayUid}
        </foreach>
    </delete>
    <select id="countMerchant" resultType="int" parameterType="com.ganli.entity.Merchant">
        SELECT count(merchant_uid) FROM merchant_list
        <where>
            <if test="merchantUid != '' and merchantUid != null">
                and merchant_uid=#{merchantUid}
            </if>
            <if test="merchantLocation != '' and merchantLocation != null">
                and merchant_location=#{merchantLocation}
            </if>
            <if test="merchantType != '' and merchantType != null">
                and merchant_type=#{merchantType}
            </if>
            <if test="merchantName != '' and merchantName != null">
                and merchant_name like CONCAT(CONCAT(#{merchantName}), '%')
            </if>
        </where>
    </select>
    <select id="countFeedback" resultType="int">
        SELECT count(feedback_uid) FROM feedback
    </select>
    <delete id="deleteUser">
        DELETE FROM user WHERE user_uid=#{id}
    </delete>
    <delete id="deleteMerchant">
        DELETE FROM merchant_list WHERE merchant_uid=#{id}
    </delete>
    <delete id="deleteFeedBck">
        DELETE FROM feedback WHERE feedback_uid=#{id}
    </delete>

    <insert id="insertImgs" parameterType="java.util.List" useGeneratedKeys="true">
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO imgs(md5,merchant_uid)
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.md5},#{item.merchant_uid})
        </foreach>
    </insert>
    
    <select id="findEventYear" resultType="int">
        SELECT COUNT(id) FROM record_event WHERE record_time LIKE  CONCAT(CONCAT(#{date}), '%')
    </select>
    <select id="findInstallYear" resultType="int">
        SELECT COUNT(id) FROM record_install WHERE record_time LIKE  CONCAT(CONCAT(#{date}), '%')
    </select>
    <select id="findMerchantYear" resultType="int">
        SELECT COUNT(id) FROM record_merchant WHERE record_time LIKE  CONCAT(CONCAT(#{date}), '%')
    </select>


</mapper>